;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Helioviewer.org Example Configuration   ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; This file contains basic configuration parameters used to control
; Helioviewer.org's behavior. Before Helioviewer.org can be used, this file
; must be copied or renamed to Config.ini and adjusted to reflect your system
; settings. Many of the parameters are described below. For a more detailed
; description of the entire installation process, see the installation
; documentation located on the Helioviewer Wiki:
;
;   http://wiki.helioviewer.org/wiki/Installing_Helioviewer.org
;
; Questions/Comments?
;   contact@helioviewer.org
;
[version]
last_update = 2021/11/18
build_num   = 821

[filepaths]
; The root directory where of your Helioviewer.org installation. This must be
; somewhere that Apache allows access to.
root_dir     = /var/www-api/docroot

; Directory where cache files will be written.  Must be writable by Apache.
; You may want to set up a cron job to periodically cull old or infrequently
; accessed caches.
cache_dir    = /var/www-api/docroot/cache

; The root directory of your JPEG 2000 archive, if one is available.
jp2_dir      = /var/www-api/docroot/jp2

[urls]
; The URL that corresponds with the root_dir specified above.
web_root_url     = http://localhost

; The URL that corresponds with the jp2_dir specified above.
jp2_root_url     = http://localhost/jp2

; The root URL to your JPIP server if one is available.
jpip_root_url    = jpip://localhost:8090

; The root URL to the Helioviewer client application
client_url       = http://helioviewer.org

; CORS
;acao_url[] = ''
acam     = 'GET, POST, PUT, PATCH, OPTIONS'

[executables]
; Location of the kdu_merge binary to be used during JPX image generation.
kdu_merge_bin = /usr/local/bin/kdu_merge

; Location of the kdu_merge binary to be used during tile generation.
kdu_expand    = /usr/local/bin/kdu_expand

[jhelioviewer]
; The maximum frames allowed for a JPX image request. Requests which would go
; over this limit are automatically adjusted (sub-sampled) and a JPX file with
; this many or fewer frames is generated instead.
; Note that due to limitations relating to the length allowed for kdu_merge
; command-line arguments, values which are very large may not always work.
; Future versions of Helioviewer may include a work-around to this limitation,
; however, the limit currently allowed should probably be sufficient for most
; cases.
max_jpx_frames = 1000

[events]
; Use MySQL database to store events (true = yes; false = no)
db_events = true
; Auth password to import events. Must be included as an auth url parameter when calling importEvents.
; For example /?action=importEvents&period=1D&auth=1337
; Leave blank for no password, otherwise choose a long and sufficiently random string
import_events_auth = ""

[movie_params]
; FFmpeg location
ffmpeg = ffmpeg

; x264 FFpreset to use during encoding of high-quality and regular-quality
; H.264 movies. Note that this is only applicable to older versions of x264:
; newer versions of x264 have been simplified and no longer use the preset
; files.
x264_preset = "fast"
x264_hq_preset = "ultrafast"

; The maximum number of frames to allow for static movie (ogv, mp4, avi)
; generation.
max_movie_frames = 300
; The maximum number of rows from the database that can be processed to create a movie.
; This is to preserve memory usage, since each row represents a frame, and this
; will be reduced to the above number of frames. As long as this is greater than
; max_movie_frames, this should have no material impact on generating movies.
max_row_limit = 15000

; Maximum number of threads FFmpeg is allowed to use during movie generation.
; No all video codecs have support for multi-threaded encoding, but two of
; the libraries used by Helioviewer.org (libx264 and libvpx) do support
; parallelization. Note that while setting this value to '0' will cause
; libx264 to use all available CPU's, this does not work for libvpx and
; should therefor be avoided.
ffmpeg_max_threads = 8

; Movie generation queue
movie_queue = "api_movie"

[statistics]
; Whether basic usage statistics should be collected by Helioviewer.org.
; Currently the information collected is very basic and does not include
; information about the specifics of the query, but rather the type of
; query and when the query was made.
enable_statistics_collection = true

[extra]
; An optional Google Analytics Web Property ID. If set, the Google Analytics
; code will be included on the main page using the specified ID.
; See https://www.google.com/analytics for more information.
google_analytics_id = ""

[boundaries]
; The date representing the oldest data that is available on helioviewer.
; This is used to ignore any requests for times that come in below this date.
; Helioviewer may also use this as a way to check that a given date is valid.
minimum_date = '1990-01-01'

[news]
; RSS/Atom News feed to display headlines from
news_feed_url = http://blog.helioviewer.org/feed/

[contact]
; Contact email address
contact_email = HelioViewerDevelopment@nasa.onmicrosoft.com

; Image that appears at the top of the API documentation
api_logo = resources/images/about.png

[debug]
; Disables caching of image tiles
disable_cache = false

[status]
; Directory where the backfill logs are stored to be displayed on the status page
; These should be updated on a running server to a less temporary space if not
; just for testing.
SDO_weekly_log = /tmp/sdo-backfill.log
SDO_monthly_log = /tmp/sdo-monthly.log
SWAP_weekly_log = /tmp/rob-backfill.log
SWAP_monthly_log = /tmp/rob-monthly.log
SOHO_weekly_log = /tmp/soho-backfill.log
SOHO_monthly_log = /tmp/soho-monthly.log
STEREO_weekly_log = /tmp/stereo-backfill.log
STEREO_monthly_log = /tmp/stereo-monthly.log

[rate-limit]
; Whether or not rate limiting should be enabled and enforced
; Whether or not rate limiting should be enabled and enforced
enforce_rate_limit = false
; Maximum number of requests (per minute) that a client can make before being rate limited
rate_limit_maximum_requests = 3000
; Prefix for the key stored in redis db. All keys will be structured as "identifier/interval"
rate_limit_prefix = "limit"
; Prefix for rate limit exceeded logging keys
; Contains date so the key cannot contain : because of h:m:s iso date format
rate_exceeded_prefix = "exceeded"

[redis-stats]
redis_stats_prefix = "stat"

[proxy]
http_proxy = ''
https_proxy = ''
http_export = ''

[coordinator]
# URL to the Coordinator API.
# This is a supporting http api running python which
# takes advantage of sunpy for more robust coordinator
# processing. See https://github.com/dgarciabriseno/coordinator
# for more details
# If running the coordinator locally, then change this to
# http://localhost:port
coordinator_url = 'http://coordinator'
