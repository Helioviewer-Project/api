name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  php-integration-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Get development docker compose file
      run: |
        cd ..
        wget https://raw.githubusercontent.com/Helioviewer-Project/helioviewer.org-docker/main/compose.yaml
        wget https://raw.githubusercontent.com/Helioviewer-Project/helioviewer.org-docker/main/.env.example
        mv .env.example .env
    # Start up api service (test environment)
    - name: Start services
      # --no-build to force it to use whatever is published in the registry
      # -d to detach, so the command returns
      # --wait to wait for containers to be healthy, meaning the test data is downloaded and ready
      run: cd .. && docker compose up --no-build --wait api

    - name: Print container logs logs
      if: always()
      run: docker logs helioviewer-api-1

    # Run the tests inside the api container
    - name: Run phpunit tests
      run: docker exec -t helioviewer-api-1 composer run-script test

    - name: Run python tests
      run: docker exec -t helioviewer-api-1 composer run-script test-python
  playwright-e2e-tests:
    strategy:
      matrix:
        shardIndex: [1, 2, 3, 4, 5]
        shardTotal: [5]
      # If one of the shards fails, continue running the remaining tests
      fail-fast: false

    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code under test
      uses: actions/checkout@v4
      with:
        submodules: true
        path: 'api'
    - name: Checkout the latest Helioviewer Front End
      uses: actions/checkout@v4
      with:
        repository: 'Helioviewer-Project/helioviewer.org'
        path: 'helioviewer.org'
    - name: Checkout test code
      uses: actions/checkout@v4
      with:
        repository: 'Helioviewer-Project/helioviewer.org-tests'
        path: 'tests'
    # See https://github.com/actions/checkout?tab=readme-ov-file#fetch-only-a-single-file
    - name: Checkout the Dockerfile for local Helioviewer
      uses: actions/checkout@v4
      with:
        repository: 'Helioviewer-Project/helioviewer.org-docker'
        path: 'compose'
        sparse-checkout: |
          compose.yaml
          .env.example
        sparse-checkout-cone-mode: false
    - name: Setup environment file
      run: mv compose/.env.example .env
    - name: Start local Helioviewer environment
      id: docker
      run: |
        mv compose/compose.yaml .
        docker compose up -d --wait
    - name: Show docker compose logs
      if: always()
      run: |
        docker compose logs
        cat compose.yaml
    - name: Fix cache directory permissions
      if: always()
      run: |
        docker compose exec web chown 33:33 cache
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Install Playwright Browsers
      run: |
        cd tests
        npx playwright install --with-deps
    - name: Run Playwright tests
      run: |
        cd tests
        npx playwright test --shard=${{matrix.shardIndex}}/${{matrix.shardTotal}}
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{matrix.shardIndex}}
        path: helioviewer.org/playwright-report/
        retention-days: 7
